name: CI/CD
on:
  - push
jobs:
  code-checks:
    name: Code Checks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.11.1
      - run: mv .env.example .env
      - run: npm ci
      - run: npm run test
      - run: npm run lint
      - run: npm run format:check
      - run: npm run types:check
  e2e:
    name: E2E Tests
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: mv .env.example .env
      - uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start-windows: npm run start:windows:server
  deploy:
    name: Deploy To Vercel
    runs-on: windows-latest
    needs: [code-checks, e2e]
    if: github.repository_owner == 'Karine91'
    permissions:
      contents: read
      deployments: write
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/master'] }}
      - uses: actions/checkout@v3
      - run: mv .env.example .env
      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: ${{ fromJSON('["--prod", ""]')[github.ref != 'refs/heads/master'] }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID}}
          working-directory: ./
      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
